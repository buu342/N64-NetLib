name: Build NetLib Browser

on:
  push:
    paths:
      - 'Client App/**'
    branches: [ "main" ]
  pull_request:
    paths:
      - 'Client App/**'
    branches: [ "main" ]
  release:
    types:
      - created

env:
  WXVERSION: v3.2.8
  WINDOWS_ARTIFACT_NAME: NetLibBrowser-Windows-x86
  LINUX_ARTIFACT_NAME: NetLibBrowser-Linux-x64
  #MACOS_ARTIFACT_NAME: UNFLoader-macOS-x64

jobs:
  build-windows:
    runs-on: windows-2019
    env:
      SOLUTION_FILE_PATH: ./Client App/NetLibBrowser.sln
      BUILD_CONFIGURATION: Release
      BUILD_PLATFORM: x86
      BUILD_DIRECTORY: ./Client App/Release
      WXWIN: D:/wxWidgets/

    steps:
      - name: Download wxWidgets
        run: |
          cd D:/
          git clone https://github.com/wxWidgets/wxWidgets.git
          cd wxWidgets
          git checkout tags/${{ env.WXVERSION }}
          git submodule update --init --recursive

      - uses: ilammy/msvc-dev-cmd@v1
      - name: Compile wxWidgets
        run: |
          cd D:/wxWidgets/build/msw
          nmake /f makefile.vc BUILD=release

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '16.0'
          msbuild-architecture: x86

      - uses: actions/checkout@v4
      - name: Build NetLib Browser
        working-directory: ${{ env.GITHUB_WORKSPACE }}
        run: |
          echo %WXWIN%
          msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=${{ env.BUILD_PLATFORM }} "${{ env.SOLUTION_FILE_PATH }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WINDOWS_ARTIFACT_NAME }}
          path: ${{ env.BUILD_DIRECTORY }}/NetLibBrowser.exe

  build-linux:
    runs-on: ubuntu-latest
    env:
      SOURCES_DIRECTORY: Client App

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install build-essential libgtk-3-dev freeglut3-dev libftdi1-dev libusb-1.0-0-dev libudev-dev
          
      - name: Build wxWidgets
        run: |
          echo Download wxWidgets
          git clone https://github.com/wxWidgets/wxWidgets.git
          cd wxWidgets
          git checkout tags/${{ env.WXVERSION }}
          git submodule update --init --recursive

          mkdir gtk-build
          cd gtk-build
          ../configure --with-opengl --disable-shared
          make -j$(nproc)
          sudo make install
          sudo ldconfig

      - name: Build
        run: |
          cd "${{ env.SOURCES_DIRECTORY }}/"
          make

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.LINUX_ARTIFACT_NAME }}
          path: |
            ${{ env.BUILD_DIRECTORY }}/build/NetLibBrowser
#
#  build-macos:
#    runs-on: macos-latest
#    env:
#      LIBFTD2XX_VERSION: '1.4.24'
#      SOURCES_DIRECTORY: ./UNFLoader/
#      BUILD_DIRECTORY: ./UNFLoader
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Build
#        run: |
#          echo Installing Prerequisites
#          brew install libftdi
#
#          echo Build macOS App
#          cd ${{ env.SOURCES_DIRECTORY }}
#          make
#          cd ..
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: ${{ env.MACOS_ARTIFACT_NAME }}
#          path: ${{ env.BUILD_DIRECTORY }}/UNFLoader
#
#  release:
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    needs: [build-windows, build-linux, build-macos]
#
#    steps:
#    - name: Download Windows artifact
#      id: download-windows
#      uses: actions/download-artifact@v4
#      with:
#        name: ${{ env.WINDOWS_ARTIFACT_NAME }}
#    - name: Rezip Windows artifact...
#      id: rezip-windows
#      run: |
#        zip -r ${{ env.WINDOWS_ARTIFACT_NAME }}.zip * -x \*.zip
#        find . -type f ! -name "*.zip" -exec rm -rf {} \;
#
#    - name: Download Linux artifact
#      id: download-linux
#      uses: actions/download-artifact@v4
#      with:
#        name: ${{ env.LINUX_ARTIFACT_NAME }}
#    - name: Rezip Linux artifact...
#      id: rezip-linux
#      run: |
#        zip -r ${{ env.LINUX_ARTIFACT_NAME }}.zip * -x \*.zip
#        find . -type f ! -name "*.zip" -exec rm -rf {} \;
#
#    - name: Download macOS artifact
#      id: download-macos
#      uses: actions/download-artifact@v4
#      with:
#        name: ${{ env.MACOS_ARTIFACT_NAME }}
#    - name: Rezip macOS artifact...
#      id: rezip-macos
#      run: |
#        zip -r ${{ env.MACOS_ARTIFACT_NAME }}.zip * -x \*.zip
#        find . -type f ! -name "*.zip" -exec rm -rf {} \;
#
#    - name: Delete already existing Release
#      id: delete_release
#      uses: dev-drprasad/delete-tag-and-release@v1.1
#      continue-on-error: true
#      with:
#        tag_name: pre
#        delete_release: true
#        github_token: ${{ secrets.GITHUB_TOKEN }}
#
#    - name: Wait for GitHub to finish deleting the Release...
#      run: sleep 5
#
#    - name: Create Release
#      id: create_release
#      uses: softprops/action-gh-release@v2
#      with:
#        tag_name: pre
#        name: Prerelease
#        body: |
#          This prerelease contains the latest build of UNFLoader, generated by GitHub Actions. It might be unstable, hence why it is marked as prerelease!
#        draft: false
#        prerelease: true
#        files: |
#          ${{ steps.download-windows.outputs.download-path }}/${{ env.WINDOWS_ARTIFACT_NAME }}.zip
#          ${{ steps.download-windows.outputs.download-path }}/${{ env.LINUX_ARTIFACT_NAME }}.zip
#          ${{ steps.download-windows.outputs.download-path }}/${{ env.MACOS_ARTIFACT_NAME }}.zip
